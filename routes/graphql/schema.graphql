"""This is a custom built-in Scalar type from LightHouse. It handles Carbon dates"""
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Buyer {
    buyerID: ID!
    buyerName: String!
    buyerEmail: String!
    orders: [Order] @hasMany
}

type Order {
    orderID: ID!
    buyer: Buyer! @belongsTo
    product: Product! @belongsTo
}

type Product {
    productID: ID!
    productName: String!
}

type Query {
    getProducts: [Product] @all
    getProduct (productID: Int! @eq): Product @find

    getBuyers: [Buyer] @all
    getBuyer (buyerID: Int! @eq): Buyer @find

    getOrders: [Order] @all
    getOrder (orderID: Int! @eq): Order @find

    me: Buyer @middleware(checks:["auth:api"]) @auth
}

type Mutation {
    createBuyer(
        buyerName: String! @rules(apply: ["required", "min:4"]),
        buyerEmail: String! @rules(apply: ["email", "unique:buyers"]),
        password: String! @rules(apply: ["min:4"]) @bcrypt
    ): Buyer! @create

    createProduct(
        productName: String! @rules(apply: ["required", "min:4"])
    ): Product! @create

    createOrder(
        buyerID: ID! @rules(apply: ["required"]),
        productID: ID! @rules(apply: ["required"])
    ): Order! @create
}